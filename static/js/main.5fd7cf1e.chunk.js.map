{"version":3,"sources":["TabPanel.js","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","id","aria-labelledby","Box","p","Typography","App","classes","makeStyles","theme","tab","backgroundColor","display","paper","FAB","position","bottom","right","useStyles","useTheme","React","useState","openNotify","setOpen","handleCloseNotify","event","reason","tabVal","setTab","className","AppBar","Tabs","onChange","newValue","indicatorColor","textColor","variant","aria-label","Tab","label","Paper","Fab","color","onClick","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","action","Fragment","IconButton","size","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qXAiCeA,MA1Bf,SAAkBC,GAAQ,IACdC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EADd,YACwBJ,EADxB,8BAGrB,OACE,6CACEK,KAAK,WAELC,GAAE,8BAAyBH,GAC3BI,kBAAA,yBAAmCJ,IAC/BC,GALN,aAOGF,IAAUC,GACT,cAACK,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,UAAaT,U,MC2EVU,MAtFf,WAEE,IAgBMC,EAhBYC,aAAW,SAACC,GAAD,MAAY,CACvCC,IAAK,CACHC,gBAAiB,UACjBC,QAAS,QAEXC,MAAO,CACLD,QAAS,QAEXE,IAAK,CACHC,SAAU,WACVC,OAAO,GACPC,MAAM,OAKMC,GAlBH,GAmBCC,cAEgBC,IAAMC,UAAS,IArBhC,mBAqBNC,EArBM,KAqBMC,EArBN,KAyBPC,EAAoB,SAACC,EAAOC,GACjB,cAAXA,GACJH,GAAQ,IA3BG,EA8BYH,IAAMC,SAAS,GA9B3B,mBA8BNM,EA9BM,KA8BEC,EA9BF,KAoCb,OACE,sBAAKC,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CAAQf,SAAS,SAAjB,SACE,eAACgB,EAAA,EAAD,CACElC,MAAO8B,EACPK,SAVU,SAACP,EAAOQ,GACxBL,EAAOK,IAUDC,eAAe,UACfC,UAAU,YACVC,QAAQ,YACRC,aAAW,OANb,UAOI,cAACC,EAAA,EAAD,CAAKC,MAAM,OAAO1C,MAAO,IACzB,cAACyC,EAAA,EAAD,CAAKC,MAAM,SAAS1C,MAAO,IAC3B,cAACyC,EAAA,EAAD,CAAKC,MAAM,WAAW1C,MAAM,MAC5B,cAACyC,EAAA,EAAD,CAAKC,MAAM,aAAa1C,MAAM,WAIpC,cAAC,EAAD,CAAUA,MAAO8B,EAAQ7B,MAAO,EAAG+B,UAAWtB,EAAQG,IAAtD,SACE,cAAC8B,EAAA,EAAD,CAAOX,UAAWtB,EAAQM,MAA1B,mCAOJ,cAAC4B,EAAA,EAAD,CAAKC,MAAM,UAAUC,QAvCE,WACvBpB,GAAQ,IAsCwCM,UAAWtB,EAAQO,IAAnE,SACE,cAAC,IAAD,MAEF,cAAC8B,EAAA,EAAD,CACIC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,KAAM1B,EACN2B,iBAAkB,IAClBC,QAAS1B,EACT2B,QAAQ,gBACRC,OACE,cAAC,IAAMC,SAAP,UAEE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQlB,aAAW,QAAQK,MAAM,UAAUC,QAASnB,EAArE,SACE,cAAC,IAAD,CAAWgC,SAAS,oBC1EnBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5fd7cf1e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        \r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nexport default TabPanel;","import React from 'react';\nimport './App.css';\nimport { AppBar, Paper, Fab, Snackbar, IconButton, Button, Tab, Tabs } from \"@material-ui/core\"\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TabPanel from './TabPanel';\nimport SwipeableViews from 'react-swipeable-views';\n\nfunction App() {\n\n  const useStyles = makeStyles((theme) => ({\n    tab: {\n      backgroundColor: '#282c34',\n      display: 'flex',\n    },\n    paper: {\n      display: 'flex',\n    },\n    FAB: {\n      position: 'absolute',\n      bottom:10,\n      right:10,\n    },\n  }));\n\n\n  const classes = useStyles()\n  const theme = useTheme();\n\n  const [openNotify, setOpen] = React.useState(false);\n  const handleOpenNotify = () => {\n    setOpen(true);\n  };\n  const handleCloseNotify = (event, reason) => {\n    if (reason === 'clickaway') { return; }\n    setOpen(false);\n  };\n\n  const [tabVal, setTab] = React.useState(0)\n  const tabChange = (event, newValue) => {\n    setTab(newValue);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Tabs\n          value={tabVal}\n          onChange={tabChange}\n          indicatorColor=\"primary\"\n          textColor=\"secondary\"\n          variant=\"fullWidth\"\n          aria-label=\"TODO\">\n            <Tab label=\"Home\" value={0}/>\n            <Tab label=\"Resume\" value={1}/>\n            <Tab label=\"About Me\" value=\"2\"/>\n            <Tab label=\"Contact me\" value=\"3\"/>\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={tabVal} index={0} className={classes.tab}>\n        <Paper className={classes.paper}>\n          This is just a test\n        </Paper>\n      </TabPanel>\n\n      \n    \n    <Fab color=\"primary\" onClick={handleOpenNotify} className={classes.FAB}>\n      <EmailIcon />\n    </Fab>\n    <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={openNotify}\n        autoHideDuration={6000}\n        onClose={handleCloseNotify}\n        message=\"Note archived\"\n        action={\n          <React.Fragment>\n\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseNotify}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}