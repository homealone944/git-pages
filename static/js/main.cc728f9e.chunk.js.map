{"version":3,"sources":["TabPanel.js","ProjectCard.js","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","ProjectCard","section","item","handleOpenFn","classes","makeStyles","theme","root","minWidth","maxWidth","float","margin","border","backgroundColor","Date","width","height","media","paddingTop","avatar","useStyles","useTheme","Card","className","CardHeader","Dates","title","Title","subheader","Subtitle","CardMedia","image","Image","CardContent","variant","color","Desc","CardActions","IconButton","onClick","App","useEffect","fetch","headers","then","response","json","myJson","setData","tabHeader","textColor","tab","display","category","marginBottom","textAlign","scrollSection","fontSize","cardsShown","overflow","infoBox","infoBoxTitle","background","FAB","position","bottom","right","scroll","e","amount","currentTarget","parentNode","getElementsByClassName","scrollLeft","useState","data","info","setInfo","openInfo","setOpenInfo","handleOpenInfo","console","log","handleCloseInfo","openNotify","setOpenNotify","handleCloseNotify","event","reason","tabVal","setTab","AppBar","Tabs","onChange","newValue","indicatorColor","aria-label","Tab","label","Object","keys","map","Paper","Button","Dialog","open","onClose","DialogTitle","DialogContent","dividers","DialogContentText","Divider","FullDesc","DialogActions","file","pageNumber","Fab","window","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc728f9e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nexport default TabPanel;","import { React, useEffect, useState } from 'react';\r\nimport { Card, CardHeader, CardContent, CardActions, CardMedia } from \"@material-ui/core\"\r\nimport { Avatar, Typography, IconButton } from \"@material-ui/core\"\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nfunction ProjectCard(props) {\r\n    const { section, item, handleOpenFn, ...other } = props;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root:{\r\n            minWidth: 250,\r\n            maxWidth: 500,\r\n            float: 'left',\r\n            margin: '10px',\r\n            border: '2px solid white',\r\n            backgroundColor: '#424242',\r\n        },\r\n        Date:{\r\n            width: '50px',\r\n            height: '50px',\r\n            backgroundColor: 'red',\r\n        },\r\n        media: {\r\n            height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n        },\r\n        avatar: {\r\n            backgroundColor: '#FF0000',\r\n        },\r\n    }));\r\n    const classes = useStyles()\r\n    const theme = useTheme();\r\n    \r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <div className={classes.Date}>\r\n                        {item.Dates}\r\n                    </div>\r\n                }\r\n                title={item.Title}\r\n                subheader={item.Subtitle}\r\n            />\r\n\r\n            <CardMedia className={classes.media}\r\n                image={\"./\"+item.Image}/>\r\n\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{item.Desc}</Typography>\r\n            </CardContent>\r\n\r\n            <CardActions>\r\n                <IconButton>\r\n                    <InfoIcon onClick={() => handleOpenFn(section, item)}/>\r\n                </IconButton>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","import { React, useEffect, useState, Fragment } from 'react';\nimport './App.css';\nimport { AppBar, Paper, Fab, Snackbar, IconButton, Button, Tab, Tabs, Divider} from \"@material-ui/core\"\nimport { Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from \"@material-ui/core\"\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Document, Page } from \"react-pdf/dist/umd/entry.parcel\"\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TabPanel from './TabPanel';\nimport ProjectCard from './ProjectCard';\n\nfunction App() {\n\n  const getData=()=>{\n    fetch('./info.json'\n    ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    )\n      .then(function(response){\n        return response.json();\n      })\n      .then(function(myJson) {\n        setData(myJson)\n      });\n  }\n  useEffect(()=>{\n    getData()\n  },[])\n\n\n  const useStyles = makeStyles((theme) => ({\n    tabHeader: {\n      textColor: 'white'\n    },\n    tab: {\n      display: 'block',\n    },\n    category: {\n      display: 'block',\n      marginBottom: '10px',\n      '& h3': {\n        textAlign: 'center',\n        margin: '0px auto 0px',\n        height: '15%',\n      }\n    },\n    scrollSection: {\n      display: 'flex',\n      height: '85%',\n      backgroundColor: '#333333',\n      '& ChevronLeftIcon': {\n        width: '5%',\n        margin: '10px 0px 10px 10px',\n        fontSize: '3rem'\n      },\n      '& ChevronRightIcon': {\n        width: '5%',\n        margin: '10px 10px 10px 0px',\n      }\n    },\n    cardsShown: {\n      width: '90%',\n      height: '85%',\n      display: 'flex',\n      overflow: 'hidden',\n    },\n    infoBox:{\n      width: '100vw',\n    },\n    infoBoxTitle: {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    },\n    FAB: {\n      position: 'fixed',\n      bottom:10,\n      right:10,\n    },\n  }));\n\n\n  const scroll = (e,amount) => {\n    var scrollable = e.currentTarget.parentNode.getElementsByClassName(classes.cardsShown)[0]\n    scrollable.scrollLeft += amount;\n  }\n  const SCROLLAMT = 200\n\n  const classes = useStyles()\n  const theme = useTheme();\n\n  const [data,setData] = useState([])\n  const [info, setInfo] = useState({\n    \"Title\":\"\",\n    \"Subtitle\":\"\",\n    \"Image\":\"\",\n    \"Desc\":\"\",\n    \"FullDesc\":\"\",\n    \"Dates\":\"\",\n    \"Source Code\":\"\",\n    \"Lessons Learned\":\"\",\n    \"Continuation\":\"\",\n    \"Links\":\"\",\n    \"Topics\":[],\n    \"Languages\":[],\n    \"Tools\":[]\n  })\n  const [openInfo, setOpenInfo] = useState(false);\n  const handleOpenInfo = (section, item) => {\n    console.log(section, item)\n    setInfo(item)\n    setOpenInfo(true);\n  }\n  const handleCloseInfo = () => {\n    setOpenInfo(false);\n  } \n\n  const [openNotify, setOpenNotify] = useState(false);\n  const handleOpenNotify = () => {\n    window.open('mailto:Risingerjmr@gmail.com?subject=Contact%20me')\n    setOpenNotify(true);\n  };\n  const handleCloseNotify = (event, reason) => {\n    if (reason === 'clickaway') { return; }\n    setOpenNotify(false);\n  };\n\n  const [tabVal, setTab] = useState(0)\n  const tabChange = (event, newValue) => {\n    setTab(newValue);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Tabs className={classes.tabHeader}\n          value={tabVal}\n          onChange={tabChange}\n          indicatorColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"TODO\">\n            <Tab label=\"Home\" value={0}/>\n            <Tab label=\"Resume\" value={1}/>\n            <Tab label=\"About Me\" value={2}/>\n        </Tabs>\n      </AppBar>\n\n\n      <TabPanel value={tabVal} index={0} className={classes.tab}>\n        {Object.keys(data).map((section)=>(\n          <Paper className={classes.category}>\n            <h3>{section}</h3>\n            <div className={classes.scrollSection}>\n              <Button onClick={(e) => {scroll(e,-SCROLLAMT)}}>\n                <ChevronLeftIcon/>\n              </Button>\n\n              <div className={classes.cardsShown}>\n                {data[section].map((item)=>\n                  <ProjectCard section={section} item={item} handleOpenFn={handleOpenInfo} />\n                )}\n              </div>\n\n              <Button onClick={(e) => {scroll(e,SCROLLAMT)}}>\n                <ChevronRightIcon/>\n              </Button>\n            </div>\n          </Paper>\n        ))}\n\n        <Dialog\n          open={openInfo}\n          onClose={handleCloseInfo}\n          scroll='paper'\n          className={classes.infoBox}\n        >\n          <DialogTitle className={classes.infoBoxTitle}>{info.Title}</DialogTitle>\n          <DialogContent dividers={true}>\n            <DialogContentText>{info.Subtitle}</DialogContentText>\n            <Divider variant=\"inset\"/>\n            <DialogContentText>{info.Dates}</DialogContentText>\n            <Divider variant=\"inset\"/>\n            <DialogContentText>{info.FullDesc}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseInfo} color=\"primary\">Close</Button>\n          </DialogActions>\n          \n        </Dialog>\n      </TabPanel>\n\n      <TabPanel value={tabVal} index={1} className={classes.tab}>\n        <Paper className={classes.category}>\n          RESUME\n          <Document file='./Resume.pdf'>\n            <Page pageNumber={1}/>\n          </Document>\n        </Paper>\n      </TabPanel>\n      <TabPanel value={tabVal} index={2} className={classes.tab}>\n        <Paper className={classes.category}>\n          About me\n        </Paper>\n      </TabPanel>\n\n      \n    \n    <Fab color=\"primary\" onClick={handleOpenNotify} className={classes.FAB}>\n      <EmailIcon />\n    </Fab>\n    <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={openNotify}\n        autoHideDuration={6000}\n        onClose={handleCloseNotify}\n        message=\"Opened Email Template\"\n        action={\n          <Fragment>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseNotify}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </Fragment>\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}