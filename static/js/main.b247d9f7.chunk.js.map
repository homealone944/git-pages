{"version":3,"sources":["TabPanel.js","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","App","classes","makeStyles","theme","tab","infoBox","width","paperWheel","display","FAB","position","bottom","right","useStyles","useTheme","React","useState","openInfo","setOpenInfo","handleCloseInfo","openNotify","setOpenNotify","handleCloseNotify","event","reason","tabVal","setTab","className","AppBar","Tabs","onChange","newValue","indicatorColor","textColor","variant","aria-label","Tab","label","Paper","paper","Button","onClick","Dialog","open","onClose","scroll","DialogTitle","DialogContent","dividers","DialogContentText","Array","map","join","DialogActions","color","file","pageNumber","Fab","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","IconButton","size","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b247d9f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nexport default TabPanel;","import React from 'react';\nimport './App.css';\nimport { AppBar, Paper, Fab, Snackbar, IconButton, Button, Tab, Tabs} from \"@material-ui/core\"\nimport { Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from \"@material-ui/core\"\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Document, Page } from \"react-pdf/dist/umd/entry.parcel\"\nimport EmailIcon from '@material-ui/icons/Email';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TabPanel from './TabPanel';\nimport SwipeableViews from 'react-swipeable-views';\n\nfunction App() {\n\n  const useStyles = makeStyles((theme) => ({\n    tab: {\n      \n    },\n    infoBox:{\n      width: '100vw',\n\n    },\n    paperWheel: {\n      display: 'flex',\n    },\n    FAB: {\n      position: 'absolute',\n      bottom:10,\n      right:10,\n    },\n  }));\n\n\n  const classes = useStyles()\n  const theme = useTheme();\n\n  const [openInfo, setOpenInfo] = React.useState(false);\n  const handleOpenInfo = () => {\n    setOpenInfo(true);\n  }\n  const handleCloseInfo = () => {\n    setOpenInfo(false);\n  } \n\n  const [openNotify, setOpenNotify] = React.useState(false);\n  const handleOpenNotify = () => {\n    setOpenNotify(true);\n  };\n  const handleCloseNotify = (event, reason) => {\n    if (reason === 'clickaway') { return; }\n    setOpenNotify(false);\n  };\n\n  const [tabVal, setTab] = React.useState(0)\n  const tabChange = (event, newValue) => {\n    setTab(newValue);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Tabs\n          value={tabVal}\n          onChange={tabChange}\n          indicatorColor=\"primary\"\n          textColor=\"secondary\"\n          variant=\"fullWidth\"\n          aria-label=\"TODO\">\n            <Tab label=\"Home\" value={0}/>\n            <Tab label=\"Resume\" value={1}/>\n            <Tab label=\"About Me\" value={2}/>\n        </Tabs>\n      </AppBar>\n\n\n\n      <TabPanel value={tabVal} index={0} className={classes.tab}>\n        <Paper className={classes.paper}>\n          <Button onClick={handleOpenInfo}>Testing1</Button>\n          <Button>Testing2</Button>\n        </Paper>\n\n        <Dialog\n          open={openInfo}\n          onClose={handleCloseInfo}\n          scroll='paper'\n          className={classes.infoBox}\n        >\n          <DialogTitle>Info</DialogTitle>\n          <DialogContent dividers={true}>\n            <DialogContentText>\n              {[...new Array(50)]\n              .map(\n                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n              )\n              .join('\\n')}\n            </DialogContentText>\n            <DialogActions>\n              <Button onClick={handleCloseInfo} color=\"primary\">Cancel</Button>\n            </DialogActions>\n          </DialogContent>\n        </Dialog>\n\n\n      </TabPanel>\n      <TabPanel value={tabVal} index={1} className={classes.tab}>\n        <Paper className={classes.paper}>\n          RESUME\n          <Document file='/Resume.pdf'>\n            <Page pageNumber={1}/>\n          </Document>\n        </Paper>\n      </TabPanel>\n      <TabPanel value={tabVal} index={2} className={classes.tab}>\n        <Paper className={classes.paper}>\n          About me\n        </Paper>\n      </TabPanel>\n\n      \n    \n    <Fab color=\"primary\" onClick={handleOpenNotify} className={classes.FAB}>\n      <EmailIcon />\n    </Fab>\n    <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={openNotify}\n        autoHideDuration={6000}\n        onClose={handleCloseNotify}\n        message=\"Note archived\"\n        action={\n          <React.Fragment>\n\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseNotify}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}