{"version":3,"sources":["TabPanel.js","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","id","aria-labelledby","Box","p","Typography","App","makeStyles","theme","tab","backgroundColor","display","paper","useStyles","useTheme","React","useState","tabVal","setTab","className","AppBar","position","Tabs","onChange","event","newValue","console","log","indicatorColor","textColor","variant","aria-label","Tab","label","hidden","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAiCeA,MA1Bf,SAAkBC,GAAQ,IACdC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EADd,YACwBJ,EADxB,8BAGrB,OACE,6CACEK,KAAK,WAELC,GAAE,8BAAyBH,GAC3BI,kBAAA,yBAAmCJ,IAC/BC,GALN,aAOGF,IAAUC,GACT,cAACK,EAAA,EAAD,CAAKC,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,UAAaT,U,MC0DVU,MAvEf,WAEoBC,aAAW,SAACC,GAAD,MAAY,CACvCC,IAAK,CACHC,gBAAiB,UACjBC,QAAS,QAEXC,MAAO,CACLD,QAAS,WAKGE,GACFC,cAZd,IAFa,EAiBYC,IAAMC,SAAS,GAjB3B,mBAiBNC,EAjBM,KAiBEC,EAjBF,KAyBb,OACE,sBAAKC,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CACEzB,MAAOoB,EACPM,SAZU,SAACC,EAAOC,GACxBC,QAAQC,IAAI,cACZT,EAAOO,GACPC,QAAQC,IAAIF,IAUNG,eAAe,UACfC,UAAU,UACVC,QAAQ,YACRC,aAAW,OANb,UAOI,cAACC,EAAA,EAAD,CAAKC,MAAM,OAAOpC,MAAM,MACxB,cAACmC,EAAA,EAAD,CAAKC,MAAM,SAASpC,MAAM,MAC1B,cAACmC,EAAA,EAAD,CAAKC,MAAM,WAAWpC,MAAM,MAC5B,cAACmC,EAAA,EAAD,CAAKC,MAAM,aAAapC,MAAM,WAIpC,qBACEG,KAAK,WACLkC,OAAmB,IAAXjB,EACRhB,GAAE,8BAAyB,GAC3BC,kBAAA,yBAAmC,GAJrC,qBAQE,cAAC,EAAD,CAAUL,MAAOoB,EAAQnB,MAAO,EAAhC,oBAOA,cAAC,EAAD,CAAUD,MAAOoB,EAAQnB,MAAO,EAAhC,wBCpDOqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4fd08e7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        \r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nexport default TabPanel;","import React from 'react';\nimport './App.css';\nimport { AppBar, Paper, Tab, Tabs } from \"@material-ui/core\"\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport TabPanel from './TabPanel';\nimport SwipeableViews from 'react-swipeable-views';\n\nfunction App() {\n\n  const useStyles = makeStyles((theme) => ({\n    tab: {\n      backgroundColor: '#282c34',\n      display: 'flex',\n    },\n    paper: {\n      display: 'flex',\n    }\n  }));\n\n\n  const classes = useStyles()\n  const theme = useTheme();\n\n\n  const [tabVal, setTab] = React.useState(0)\n  const tabChange = (event, newValue) => {\n    console.log(\"Change Tab\")\n    setTab(newValue);\n    console.log(newValue)\n  };\n\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Tabs\n          value={tabVal}\n          onChange={tabChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"TODO\">\n            <Tab label=\"Home\" value=\"0\"/>\n            <Tab label=\"Resume\" value=\"1\"/>\n            <Tab label=\"About Me\" value=\"2\"/>\n            <Tab label=\"Contact me\" value=\"3\"/>\n        </Tabs>\n      </AppBar>\n\n      <div\n        role=\"tabpanel\"\n        hidden={tabVal !== 0}\n        id={`full-width-tabpanel-${0}`}\n        aria-labelledby={`full-width-tab-${0}`}\n      >\n        Item -1\n      </div>\n        <TabPanel value={tabVal} index={0}>\n          Item 0\n          {/* <Paper className={classes.paper}>\n            This is just a test\n          </Paper> */}\n        </TabPanel>\n\n        <TabPanel value={tabVal} index={1}>\n          Item 1\n          {/* <Paper className={classes.paper}>\n            This is just a test 1\n          </Paper> */}\n        </TabPanel>\n\n      \n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}