{"version":3,"sources":["TabPanel.js","ProjectCard.js","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","ProjectCard","section","item","handleOpenFn","classes","makeStyles","theme","root","minWidth","float","margin","border","media","height","paddingTop","avatar","backgroundColor","useStyles","useTheme","Card","className","CardHeader","Avatar","title","Title","subheader","Dates","CardMedia","CardContent","variant","color","component","Desc","CardActions","IconButton","onClick","App","useEffect","fetch","headers","then","response","json","myJson","setData","tab","display","category","marginBottom","textAlign","scrollSection","width","cardsShown","overflow","infoBox","infoBoxTitle","background","FAB","position","bottom","right","scroll","e","amount","currentTarget","parentNode","getElementsByClassName","scrollLeft","useState","data","info","setInfo","openInfo","setOpenInfo","handleOpenInfo","console","log","handleCloseInfo","openNotify","setOpenNotify","handleCloseNotify","event","reason","tabVal","setTab","AppBar","Tabs","onChange","newValue","indicatorColor","textColor","aria-label","Tab","label","Object","keys","map","Paper","Button","Dialog","open","onClose","DialogTitle","DialogContent","dividers","DialogContentText","Array","join","DialogActions","file","pageNumber","Fab","window","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","size","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee48bd0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\nexport default TabPanel;","import { React, useEffect, useState } from 'react';\r\nimport { Card, CardHeader, CardContent, CardActions, CardMedia } from \"@material-ui/core\"\r\nimport { Avatar, Typography, IconButton } from \"@material-ui/core\"\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nfunction ProjectCard(props) {\r\n    const { section, item, handleOpenFn, ...other } = props;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root:{\r\n            minWidth: 550,\r\n            float: 'left',\r\n            margin: '10px',\r\n            border: '2px solid black'\r\n        },\r\n        media: {\r\n            height: 0,\r\n            paddingTop: '56.25%', // 16:9\r\n        },\r\n        avatar: {\r\n            backgroundColor: '#FF0000',\r\n        },\r\n    }));\r\n    const classes = useStyles()\r\n    const theme = useTheme();\r\n    \r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n            avatar={\r\n                <Avatar>Tmp</Avatar>\r\n            }\r\n            title={item.Title}\r\n            subheader={item.Dates}\r\n            />\r\n            <CardMedia className={classes.media}/>\r\n            <CardContent>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{item.Desc}</Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <IconButton>\r\n                    <InfoIcon onClick={() => handleOpenFn(section, item)}/>\r\n                </IconButton>\r\n                <Avatar>P</Avatar>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","import { React, useEffect, useState, Fragment } from 'react';\nimport './App.css';\nimport { AppBar, Paper, Fab, Snackbar, IconButton, Button, Tab, Tabs, Typography, Hidden} from \"@material-ui/core\"\nimport { Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText } from \"@material-ui/core\"\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Document, Page } from \"react-pdf/dist/umd/entry.parcel\"\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport EmailIcon from '@material-ui/icons/Email';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TabPanel from './TabPanel';\nimport ProjectCard from './ProjectCard';\n\nfunction App() {\n\n  const getData=()=>{\n    fetch('./info.json'\n    ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    )\n      .then(function(response){\n        return response.json();\n      })\n      .then(function(myJson) {\n        setData(myJson)\n      });\n  }\n  useEffect(()=>{\n    getData()\n  },[])\n\n\n  const useStyles = makeStyles((theme) => ({\n    tab: {\n      display: 'block',\n    },\n    category: {\n      display: 'block',\n      marginBottom: '10px',\n      '& h3': {\n        textAlign: 'center',\n        margin: '0px auto 0px',\n        height: '15%',\n      }\n    },\n    scrollSection: {\n      display: 'flex',\n      height: '85%',\n      '& ChevronLeftIcon': {\n        width: '5%',\n        margin: '10px 0px 10px 10px',\n      },\n      '& ChevronRightIcon': {\n        width: '5%',\n        margin: '10px 10px 10px 0px',\n      }\n    },\n    cardsShown: {\n      width: '90%',\n      height: '85%',\n      display: 'flex',\n      overflow: 'scroll',\n    },\n    infoBox:{\n      width: '100vw',\n    },\n    infoBoxTitle: {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    },\n    FAB: {\n      position: 'absolute',\n      bottom:10,\n      right:10,\n    },\n  }));\n\n\n  const scroll = (e,amount) => {\n    var scrollable = e.currentTarget.parentNode.getElementsByClassName(classes.cardsShown)[0]\n    scrollable.scrollLeft += amount;\n  }\n  const SCROLLAMT = 100\n\n  const classes = useStyles()\n  const theme = useTheme();\n\n  const [data,setData] = useState([])\n  const [info, setInfo] = useState({\n    \"Title\":\"\",\n    \"Image\":\"\",\n    \"Desc\":\"\",\n    \"FullDesc\":\"\",\n    \"Dates\":\"\",\n    \"Source Code\":\"\",\n    \"Lessons Learned\":\"\",\n    \"Continuation\":\"\",\n    \"Links\":\"\",\n    \"Topics\":[],\n    \"Languages\":[],\n    \"Tools\":[]\n  })\n  const [openInfo, setOpenInfo] = useState(false);\n  const handleOpenInfo = (section, item) => {\n    console.log(section, item)\n    setInfo(item)\n    setOpenInfo(true);\n  }\n  const handleCloseInfo = () => {\n    setOpenInfo(false);\n  } \n\n  const [openNotify, setOpenNotify] = useState(false);\n  const handleOpenNotify = () => {\n    window.open('mailto:Risingerjmr@gmail.com?subject=Contact%20me')\n    setOpenNotify(true);\n  };\n  const handleCloseNotify = (event, reason) => {\n    if (reason === 'clickaway') { return; }\n    setOpenNotify(false);\n  };\n\n  const [tabVal, setTab] = useState(0)\n  const tabChange = (event, newValue) => {\n    setTab(newValue);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Tabs\n          value={tabVal}\n          onChange={tabChange}\n          indicatorColor=\"primary\"\n          textColor=\"secondary\"\n          variant=\"fullWidth\"\n          aria-label=\"TODO\">\n            <Tab label=\"Home\" value={0}/>\n            <Tab label=\"Resume\" value={1}/>\n            <Tab label=\"About Me\" value={2}/>\n        </Tabs>\n      </AppBar>\n\n\n      <TabPanel value={tabVal} index={0} className={classes.tab}>\n        {Object.keys(data).map((section)=>(\n          <Paper className={classes.category}>\n            <h3>{section}</h3>\n            <div className={classes.scrollSection}>\n              <Button onClick={(e) => {scroll(e,-SCROLLAMT)}}>\n                <ChevronLeftIcon/>\n              </Button>\n\n              <div className={classes.cardsShown} id=\"temp\">\n                {data[section].map((item)=>\n                  <ProjectCard section={section} item={item} handleOpenFn={handleOpenInfo} />\n                )}\n              </div>\n\n              <Button onClick={(e) => {scroll(e,SCROLLAMT)}}>\n                <ChevronRightIcon/>\n              </Button>\n            </div>\n          </Paper>\n        ))}\n\n        <Dialog\n          open={openInfo}\n          onClose={handleCloseInfo}\n          scroll='paper'\n          className={classes.infoBox}\n        >\n          <DialogTitle className={classes.infoBoxTitle}>{info.Title}</DialogTitle>\n          <DialogContent dividers={true}>\n\n            <DialogContentText>\n              {[...new Array(50)]\n              .map(\n                () => `Cras mattis consectetur purus sit amet fermentum.\nCras justo odio, dapibus ac facilisis in, egestas eget quam.\nMorbi leo risus, porta ac consectetur ac, vestibulum at eros.\nPraesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\n              )\n              .join('\\n')}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleCloseInfo} color=\"primary\">Close</Button>\n          </DialogActions>\n          \n        </Dialog>\n      </TabPanel>\n\n      <TabPanel value={tabVal} index={1} className={classes.tab}>\n        <Paper className={classes.category}>\n          RESUME\n          <Document file='./Resume.pdf'>\n            <Page pageNumber={1}/>\n          </Document>\n        </Paper>\n      </TabPanel>\n      <TabPanel value={tabVal} index={2} className={classes.tab}>\n        <Paper className={classes.category}>\n          About me\n        </Paper>\n      </TabPanel>\n\n      \n    \n    <Fab color=\"primary\" onClick={handleOpenNotify} className={classes.FAB}>\n      <EmailIcon />\n    </Fab>\n    <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={openNotify}\n        autoHideDuration={6000}\n        onClose={handleCloseNotify}\n        message=\"Opened Email Template\"\n        action={\n          <Fragment>\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseNotify}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </Fragment>\n        }\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}